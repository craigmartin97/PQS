<Window x:Class="PQS.Views.PQSWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:chrome="clr-namespace:Microsoft.Windows.Shell;assembly=Microsoft.Windows.Shell"
        xmlns:window="clr-namespace:Converters.Behaviours.WindowBehaviours;assembly=Converters"
        WindowState="Maximized"
        Icon="../Images/playPQSLogo.ico"
        WindowStartupLocation="CenterScreen"
        StateChanged="PQS_StateChanged"
        ShowInTaskbar="False"
        Visibility="Visible"
        x:Name="PQS"
        Title="PQS" MinWidth="1220" Width="1220" MinHeight="600">

    <Window.Triggers>
        <EventTrigger RoutedEvent="Loaded">
            <BeginStoryboard>
                <Storyboard>
                    <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0.0" To="1.0" Duration="0:0:1" />
                </Storyboard>
            </BeginStoryboard>
        </EventTrigger>
    </Window.Triggers>

    <chrome:WindowChrome.WindowChrome>
        <chrome:WindowChrome x:Name="chrome"
                      ResizeBorderThickness="5"
                      CornerRadius="20"
                      CaptionHeight="42"
                      GlassFrameThickness="0" />
    </chrome:WindowChrome.WindowChrome>

    <Border x:Name="outerBorder">
        <DockPanel LastChildFill="True">
            <!-- Top Bar -->
            <Grid DockPanel.Dock="Top" Background="{StaticResource OffsetWhiteBrush}">

                <StackPanel HorizontalAlignment="Left" Orientation="Horizontal">

                    <UniformGrid Columns="3">
                        <Button x:Name="PQSLogo" Style="{StaticResource SystemIconButton}" window:SystemIconBehaviour.SystemIconProperty="True" >
                            <Image Style="{StaticResource LogoImageStyle}" />
                        </Button>

                        <Button MaxHeight="50" Style="{StaticResource SystemIconButton}" Command="{Binding Path=RefreshNavigationOptions}"
                            BorderThickness="0"  Margin="10,0,0,0">
                            <Image Source=".././Images/refreshIcon.ico"  />
                        </Button>


                        <ToggleButton IsChecked="{Binding Path=IsCheckedToggle, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        chrome:WindowChrome.IsHitTestVisibleInChrome="True" Style="{StaticResource SystemIconToggleButton}" Margin="16,0,0,0"
                        x:Name="toggleBtn" 
                        Visibility="{Binding Path=RequestsAlertButtonVisibility, Converter={StaticResource BooleanToVisibilityConverter}}">

                            <!--<ToggleButton.Style>
                                <Style TargetType="{x:Type ToggleButton}">

                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="BorderBrush" Value="Transparent" />

                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="{StaticResource OffsetBlackBrush}" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ToggleButton.Style>-->
                            <Grid Width="40" Height="40" MaxWidth="45" MaxHeight="45">
                                <Ellipse Stroke="Red">
                                </Ellipse>
                                <TextBlock FontWeight="Bold" Foreground="Red" HorizontalAlignment="Center" TextAlignment="Center" VerticalAlignment="Center"
                                           Text="{Binding Path=RequestAlerts, FallbackValue='Error'}">

                                </TextBlock>
                            </Grid>
                        </ToggleButton>

                        <Popup x:Name="ToggledPopup" StaysOpen="False" IsOpen="{Binding IsChecked, ElementName=toggleBtn, Mode=TwoWay}">
                            <Border Width="1000" Height="500" Background="White" BorderThickness="1" BorderBrush="Black">

                                <StackPanel>
                                    <Label Content="{StaticResource SoftwareAccessRequests}" Style="{StaticResource BaseHeaderLabelStyle}"/>

                                    <DataGrid ItemsSource="{Binding Path=UserRequests}" 
                                              SelectedItem="{Binding Path=SelectedRequest, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                              Style="{StaticResource BaseDataGridStyle}" >

                                        <DataGrid.CellStyle>
                                            <Style TargetType="{x:Type DataGridCell}">
                                                <Setter Property="Background" Value="{StaticResource WhiteColorBrush}" />
                                                <Setter Property="Foreground" Value="Black" />
                                                <Style.Triggers>
                                                    <Trigger Property="IsSelected" Value="True">
                                                        <Setter Property="Background" Value="Transparent" />
                                                        <Setter Property="BorderBrush" Value="Orange" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </DataGrid.CellStyle>

                                        <DataGrid.Columns>
                                            <DataGridTemplateColumn Header="Name" HeaderStyle="{StaticResource DataGridColumnHeaderStyle}" CellTemplate="{StaticResource NameTwoAndFourTemplate}"/>
                                            <DataGridTemplateColumn Header="Module" HeaderStyle="{StaticResource DataGridColumnHeaderStyle}" CellTemplate="{StaticResource ModuleTemplate}"/>
                                            <DataGridTemplateColumn Header="Permission Level" HeaderStyle="{StaticResource DataGridColumnHeaderStyle}"  CellTemplate="{StaticResource PermissionTemplate}" />
                                            <DataGridTemplateColumn Header="Response" HeaderStyle="{StaticResource DataGridColumnHeaderStyle}" CellTemplate="{StaticResource ResponseTemplate}" />
                                        </DataGrid.Columns>

                                    </DataGrid>
                                    <!--<ListBox ItemsSource="{Binding Path=UserRequests}">
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition />
                                                        <ColumnDefinition />
                                                        <ColumnDefinition />
                                                    </Grid.ColumnDefinitions>

                                                    <Label Content="{Binding Path=User.Username}" />
                                                    <Label Grid.Column="1" Content="{Binding Path=Module.AdminIdentifyingName}" />

                                                    <Button Grid.Column="2" Content="Accept Request" 
                                                    Command="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.AcceptSoftwareRequestCommand}" 
                                                    CommandParameter="{Binding}"/>
                                                </Grid>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>-->
                                </StackPanel>


                            </Border>
                        </Popup>

                    </UniformGrid>
                    <!-- window:SystemIconBehaviour.SystemIconProperty="True" -->

                </StackPanel>


                <Label Content="{StaticResource AppNameString}" Style="{StaticResource WindowTitleStyle}" FontSize="{StaticResource FontSize36}" />

                <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">

                    <Label Content="{Binding Path=ApplicationVersion, FallbackValue='Error'}" 
                           HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,40,0"
                           FontFamily="{StaticResource LatoRegular}" FontSize="{StaticResource FontSize12}" Foreground="{StaticResource DarkGreyBrush}"/>
                    <UniformGrid Columns="3">
                        <Button Content="-" Style="{StaticResource WindowControlButton}" window:MinimizeOnClickBehaviour.MinimizeWindowProperty="True" />
                        <Button Content="[ ]" Style="{StaticResource WindowControlButton}" window:MaximizeOnClickBehaviour.MaximizeWindowProperty="True" />
                        <Button x:Name="CloseWindow" Content="X" Style="{StaticResource WindowCloseButton}" window:CloseOnClickBehaviour.CloseWindowProperty="True" />
                    </UniformGrid>
                </StackPanel>

            </Grid>

            <Border BorderThickness="0,1,0,0" BorderBrush="{StaticResource WhiteColorBrush}" DockPanel.Dock="Top" >
                <DockPanel LastChildFill="True" Background="{StaticResource NavyBlueBrush}">
                    <StackPanel Margin="0,0,25,0" Orientation="Horizontal" DockPanel.Dock="Right">
                        <Label Content="{Binding Path=CurrentUser.Username, FallbackValue='Username'}" ContentStringFormat="Welcome: {0}" Foreground="{StaticResource WhiteColorBrush}" FontSize="16" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" />
                        <Label Content="{Binding Path=CurrentDateTime, FallbackValue='Error Getting DateTime'}" ContentStringFormat="{}{0:dd/MM/yyyy HH:mm:ss}" Foreground="{StaticResource WhiteColorBrush}" FontSize="16" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" />
                    </StackPanel>

                    <Label DockPanel.Dock="Top" Margin="310,0,0,0" Content="{Binding Path=SubModuleTitle, FallbackValue=Error}" Style="{StaticResource BaseHeaderLabelStyle}"
                   MinHeight="50" />
                </DockPanel>
            </Border>
            
            <!-- Navigation Bar -->
            <Border BorderThickness="0,0,1,0" BorderBrush="{StaticResource WhiteColorBrush}" DockPanel.Dock="Left">
                <Grid Background="{StaticResource NavyBlueBrush}" MinWidth="150" MaxWidth="220">
                    <StackPanel VerticalAlignment="Top">

                        <!-- Admin Module Button, only avaliable to PQS Admins -->
                        <Button Style="{StaticResource NavigationButtonStyle}" 
                            Visibility="{Binding Path=FavouritesCategoryVisibility, Converter={StaticResource BooleanToVisibilityConverter}}"
                            Command="{Binding Path=FavouritesNavigationCommand}"
                            CommandParameter="{StaticResource Favourites}">
                            <TextBlock Text="{StaticResource Favourites}" Style="{StaticResource NavigationTextBlockContentStyle}" />
                        </Button>

                        <ItemsControl ItemsSource="{Binding Path=NavigationCategories}" HorizontalContentAlignment="Stretch">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel>
                                        <Button Style="{StaticResource NavigationButtonStyle}"
                                        Command="{Binding RelativeSource={RelativeSource AncestorType=Window, Mode=FindAncestor}, Path=DataContext.ModulesNavigationCommand}">
                                            <TextBlock TextWrapping="Wrap" Text="{Binding Path=CategoryName}"  Style="{StaticResource NavigationTextBlockContentStyle}"/>
                                        </Button>
                                    </StackPanel>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>

                        <!-- Admin Module Button, only avaliable to PQS Admins -->
                        <Button Style="{StaticResource NavigationButtonStyle}" 
                            Visibility="{Binding Path=AdminCategoryVisibility, Converter={StaticResource BooleanToVisibilityConverter}}"
                            Command="{Binding Path=AdminCategoryNavigationCommand}">
                            <TextBlock Text="{StaticResource AdminString}" Style="{StaticResource NavigationTextBlockContentStyle}" />
                        </Button>
                    </StackPanel>

                    <Button VerticalAlignment="Bottom" Command="{Binding Path=RequestSoftwareCommand}" Style="{StaticResource NavigationButtonStyle}">
                        <TextBlock Text="{StaticResource RequestSoftwareString}" Style="{StaticResource NavigationTextBlockContentStyle}" />
                    </Button>
                </Grid>
            </Border>

            <!-- Main Content Area -->
            <Grid>
                <ContentControl Content="{Binding Path=CurrentView}" />
            </Grid>
        </DockPanel>
    </Border>
</Window>
