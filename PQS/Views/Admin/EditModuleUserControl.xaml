<UserControl x:Class="PQS.Views.Admin.EditModuleUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:addMod="clr-namespace:PQS.Views.Admin"
             xmlns:int="clr-namespace:PQS.Views.CustomControls"
             mc:Ignorable="d" 
             d:DesignHeight="900" d:DesignWidth="900">

    <UserControl.Resources>

        <Style x:Key="EditModulesOperationButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource CategoryOperationButtonStyle}">
            <Setter Property="IsEnabled" Value="{Binding SelectedItems.Count, ElementName=SelectedCategory, FallbackValue=True}" />
            <Setter Property="IsEnabled" Value="{Binding SelectedItems.Count, ElementName=SelectedMod, FallbackValue=True}" />
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.6" />
                </Trigger>
                <DataTrigger Binding="{Binding Path=(Validation.HasError), ElementName=DisplayName}" Value="True">
                    <Setter Property="IsEnabled" Value="False" />
                    <Setter Property="Opacity" Value="0.6" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=(Validation.HasError), ElementName=IdName}" Value="True">
                    <Setter Property="IsEnabled" Value="False" />
                    <Setter Property="Opacity" Value="0.6" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=(Validation.HasError), ElementName=ExePath}" Value="True">
                    <Setter Property="IsEnabled" Value="False" />
                    <Setter Property="Opacity" Value="0.6" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=(Validation.HasError), ElementName=ExeDirectory}" Value="True">
                    <Setter Property="IsEnabled" Value="False" />
                    <Setter Property="Opacity" Value="0.6" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=(Validation.HasError), ElementName=LogoPath}" Value="True">
                    <Setter Property="IsEnabled" Value="False" />
                    <Setter Property="Opacity" Value="0.6" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=(Validation.HasError), ElementName=Order}" Value="True">
                    <Setter Property="IsEnabled" Value="False" />
                    <Setter Property="Opacity" Value="0.6" />
                </DataTrigger>
            </Style.Triggers>
        </Style>


        <Style x:Key="DeleteEditModOperationButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource CategoryOperationButtonStyle}">
            <Setter Property="IsEnabled" Value="{Binding SelectedItems.Count, ElementName=SelectedMod, FallbackValue=True}" />
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.6" />
                </Trigger>
            </Style.Triggers>
        </Style>

    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition />
        </Grid.RowDefinitions>
        <!-- Execution path -->
        <Grid  Style="{StaticResource AdminGridRowStyle}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.3*"/>
                <ColumnDefinition />
            </Grid.ColumnDefinitions>

            <Label Content="{StaticResource SelectModule}" Style="{StaticResource DefaultDescriptionLabelStyle}" />

            <ComboBox x:Name="SelectedMod"
                  Grid.Column="1"
                  ItemsSource="{Binding Path=AllModules}"
                  SelectedItem="{Binding Path=SelectedModule, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}"
                  DisplayMemberPath="AdminIdentifyingName"
                  Style="{DynamicResource DefaultAdminComboBoxStyle}"
                >

                <ComboBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ComboBoxItem}">
                        <Setter Property="SnapsToDevicePixels" Value="true"/>
                        <Setter Property="Foreground" Value="{StaticResource BlackColorBrush}" />
                        <Setter Property="Background" Value="Orange" />
                        <Setter Property="FontFamily" Value="{StaticResource LatoRegular}" />
                        <Setter Property="FontSize" Value="{StaticResource FontSize18}" />
                        <Setter Property="OverridesDefaultStyle" Value="true"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                    <Border Name="Border"
                              Padding="2"
                              SnapsToDevicePixels="true">
                                        <ContentPresenter  />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <!-- Hovering over item in list color -->
                                        <Trigger Property="IsHighlighted" Value="true">
                                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource NavyBlueBrush}"/>
                                            <Setter Property="Foreground" Value="{StaticResource WhiteColorBrush}" />
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Foreground" Value="#888888"/>
                                        </Trigger>
                                        <DataTrigger Binding="{Binding Path=IsDisabled}" Value="True">
                                            <Setter TargetName="Border" Property="Background" Value="{StaticResource OrangeBrush}" />
                                            <Setter Property="Foreground" Value="{StaticResource WhiteColorBrush}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=IsActive}" Value="False">
                                            <Setter TargetName="Border" Property="Background" Value="{StaticResource BloodRedBrush}" />
                                            <Setter Property="Foreground" Value="{StaticResource WhiteColorBrush}" />
                                        </DataTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ComboBox.ItemContainerStyle>
            </ComboBox>
        </Grid>

        <!--<addMod:AddModuleUserControl Grid.Row="1" />-->

        <ScrollViewer Grid.Row="1">
            <Grid Style="{StaticResource BaseGridStyle}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition  />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <!-- display name -->
                <Grid Style="{StaticResource AdminGridRowStyle}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.3*"/>
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <Label Content="{StaticResource DisplayName}" Style="{StaticResource DefaultDescriptionLabelStyle}" />

                    <TextBox 
                  x:Name="DisplayName"
                  Grid.Column="1"
                  Text="{Binding Path=DisplayName, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}"
                  Style="{StaticResource SmallTextBoxStyle}" />
                </Grid>

                <!-- admin id name, the name we see when editing and using the drop down -->
                <Grid Grid.Row="1" Style="{StaticResource AdminGridRowStyle}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.3*"/>
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <Label Content="{StaticResource AdminIdentifyingName}" Style="{StaticResource DefaultDescriptionLabelStyle}" />

                    <TextBox 
                  x:Name="IdName"
                  Grid.Column="1"
                  Text="{Binding Path=AdminIdentifyingName, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}"
                  Style="{StaticResource SmallTextBoxStyle}" />
                </Grid>

                <!-- Description box -->
                <Grid Grid.Row="2" Style="{StaticResource AdminGridRowStyle}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.3*"/>
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <Label Content="{StaticResource Description}" Style="{StaticResource DefaultDescriptionLabelStyle}" />

                    <TextBox 
                  Grid.Column="1"
                  Text="{Binding Path=Description, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}"
                  Style="{StaticResource ExtraHeightTextBoxStyle}" />
                </Grid>

                <!-- Execution path -->
                <Grid Grid.Row="3" Style="{StaticResource AdminGridRowStyle}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.3*"/>
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <Label Content="{StaticResource ExecutionPath}" Style="{StaticResource DefaultDescriptionLabelStyle}" />

                    <Grid Grid.Column="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition  />
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <TextBox 
                        x:Name="ExePath"
                        Text="{Binding Path=ExecutionPath, UpdateSourceTrigger=PropertyChanged, 
                                        ValidatesOnDataErrors=True, ValidatesOnExceptions=True, Mode=TwoWay}"
                        Style="{StaticResource FillTextBoxStyle}" />

                        <Button Grid.Column="1" 
                            Background="{StaticResource NavyBlueBrush}" Foreground="{StaticResource WhiteColorBrush}" 
                            FontWeight="Bold" Content="..." FontSize="22" 
                            Command="{Binding Path=OpenFileDialogCommandForExecutionPath}" />
                    </Grid>

                </Grid>

                <!-- Execution directory -->
                <Grid Grid.Row="4" Style="{StaticResource AdminGridRowStyle}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.3*"/>
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <Label Content="{StaticResource ExecutionDirectory}" Style="{StaticResource DefaultDescriptionLabelStyle}" />

                    <Grid Grid.Column="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition  />
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <TextBox 
                        x:Name="ExeDirectory"
                        Text="{Binding Path=ExecutionDirectory, UpdateSourceTrigger=PropertyChanged, 
                                        ValidatesOnDataErrors=True, ValidatesOnExceptions=True, Mode=TwoWay}"
                        Style="{StaticResource FillTextBoxStyle}" />

                        <Button Grid.Column="1" 
                            Background="{StaticResource NavyBlueBrush}" Foreground="{StaticResource WhiteColorBrush}" 
                            FontWeight="Bold" Content="..." FontSize="22" 
                            Command="{Binding Path=OpenFileDialogCommandForExecutionDirectory}" />
                    </Grid>

                </Grid>
                
                <!-- Execution path -->
                <Grid Grid.Row="5" Style="{StaticResource AdminGridRowStyle}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.3*"/>
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <Label Content="{StaticResource LogoPath}" Style="{StaticResource DefaultDescriptionLabelStyle}"/>

                    <Grid Grid.Column="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <TextBox 
                        x:Name="LogoPath"
                        Text="{Binding Path=LogoPath, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}"
                        Style="{StaticResource FillTextBoxStyle}" />

                        <Button Grid.Column="1" 
                            Background="{StaticResource NavyBlueBrush}" Foreground="{StaticResource WhiteColorBrush}" 
                            FontWeight="Bold" Content="..." FontSize="{StaticResource FontSize22}" 
                            Command="{Binding Path=OpenFileDialogCommandForLogoPath}" />
                    </Grid>
                </Grid>

                <!-- Execution path -->
                <Grid Grid.Row="6" Style="{StaticResource AdminGridRowStyle}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.3*"/>
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <Label Content="{StaticResource SelectCategory}" Style="{StaticResource DefaultDescriptionLabelStyle}" />

                    <ComboBox 
                   x:Name="SelectedCategory"
                  Grid.Column="1"
                  ItemsSource="{Binding Path=AllCategories}"
                  IsSynchronizedWithCurrentItem="True"
                  Text="{Binding Path=SelectedCategory.CategoryName}"
                  SelectedItem="{Binding Path=SelectedCategory, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}"
                  DisplayMemberPath="CategoryName"
                  Style="{DynamicResource DefaultAdminComboBoxStyle}" />
                </Grid>

                <Grid Grid.Row="7" Margin="0,15,0,0" HorizontalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.3*"/>
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <Label Content="{StaticResource Order}" Style="{StaticResource DefaultDescriptionLabelStyle}" />

                    <int:IntegerUpDown x:Name="Order" Grid.Column="1" Style="{StaticResource AdminIntegerUpDownControlStyle}" 
                               Minimum="0" 
                               Value="{Binding Path=Order, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}" />
                </Grid>

                <Grid Grid.Row="8" Style="{StaticResource AdminGridRowStyle}" MinHeight="37">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition  />
                        <ColumnDefinition />

                    </Grid.ColumnDefinitions>

                    <Grid Grid.Column="0" HorizontalAlignment="Center" MinWidth="400">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition />
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <Label Margin="0" Grid.Column="0" Content="{StaticResource DisableModule}" Style="{StaticResource DefaultDescriptionLabelStyle}" />
                            <CheckBox Grid.Column="1" 
                      HorizontalAlignment="Center" VerticalAlignment="Center" 
                      Style="{DynamicResource CheckBoxBase}" IsChecked="{Binding Path=IsDisabled}"
                      Margin="0,0,0,0"/>

                            <Image Grid.Column="2" HorizontalAlignment="Left" MaxHeight="30" Width="30" Source="../.././Images/questionMark.png" 
                           ToolTip="Prevent the module from being executed by users"/>
                        </Grid>
                    </Grid>

                    <Grid Grid.Column="2" HorizontalAlignment="Center" MinWidth="400">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition />
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Label Content="{StaticResource ActiveModule}" Style="{StaticResource DefaultDescriptionLabelStyle}"/>
                            <CheckBox Grid.Column="1"
                      HorizontalAlignment="Center" VerticalAlignment="Center" 
                      Style="{DynamicResource CheckBoxBase}" IsChecked="{Binding Path=IsActive}"
                      Margin="20,0,0,0"/>

                            <Image Grid.Column="2" HorizontalAlignment="Left" MaxHeight="30" Width="30" Source="../.././Images/questionMark.png" 
                           ToolTip="Soft delete the module, prevents the module from appearing but remains in the database"/>
                        </Grid>
                    </Grid>


                </Grid>

                <ScrollViewer Grid.Row="9" Margin="12" MinHeight="200" >
                    <DataGrid ItemsSource="{Binding Path=ModuleParameters}" SelectedItem="{Binding Path=SelectedModuleParameter}"
                          Style="{StaticResource BaseDataGridStyle}" CellStyle="{StaticResource BaseDataGridCellStyle}" 
                          SelectionUnit="FullRow" CanUserAddRows="True" CanUserDeleteRows="True" IsReadOnly="False">

                        <DataGrid.Columns>
                            <DataGridTemplateColumn Header="Parameter" HeaderStyle="{StaticResource DataGridColumnHeaderStyle}" Width="*" 
                                            CellTemplate="{StaticResource ParameterTemplate}" CellEditingTemplate="{StaticResource EditingParameterTemplate}"/>
                            <DataGridTemplateColumn Header="Order" HeaderStyle="{StaticResource DataGridColumnHeaderStyle}" Width="*" 
                                            CellTemplate="{StaticResource OrderTemplate}" CellEditingTemplate="{StaticResource EditingOrderTemplate}"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </ScrollViewer>

                <Grid Grid.Row="10" VerticalAlignment="Bottom" MinHeight="50">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,0,70,0">
                        <Button  MinWidth="170" Content="{Binding Path=DeleteButtonContent, FallbackValue=Error}" Command="{Binding Path=DeleteOperationCommand}" Style="{StaticResource DeleteEditModOperationButtonStyle}" Margin="0,0,80,0"/>
                        <Button  MinWidth="170" Content="{Binding Path=UpdateButtonContent}" Command="{Binding Path=ModuleOperationCommand}" Style="{StaticResource EditModulesOperationButtonStyle}" />
                    </StackPanel>

                </Grid>

            </Grid>
        </ScrollViewer>
    </Grid>
</UserControl>
